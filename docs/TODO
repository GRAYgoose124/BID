# TODO: Add BF tutorial, design this to give a good understanding of program structure and interpreter workings....
# TODO: Make it show the parts of the python code being utilized in interpreter?(Output interpreter source as you debug)
# TODO: Clean up visualization!!! Make the tape more readable.
# TODO: Time Taken
# TODO: Show position on input string
# TODO: Disable all debug buttons in one function and have a reenable function reenable all buttons
# ...There are a lot of repetitions in different code blocks, functionalize this.
# TODO: Modify to toggle unbounded, bounded, no wrap, wrap, EOF, etc wrap cells etc Have a new command like # to ...
# ... denote all this so individual programs can specify their needs.
# TODO: When no source is loaded or edited, just disable all buttons for running etc...These should all be the ones ...
# ... which have grouped enable/disable functions.
# TODO: Tape to deque if keeping infinite tape...
# TODO: Syntax Errors! Match [] before execution (I.e set up jumps at start and read from dict key: value ]pos: [pos)
# TODO: Runtime Errors! Trying to < or > at end of tape if bounded.
# TODO: Running In progress display and Run after debug to continue the process and finish
# TODO: Compile brainfuck for running. (Even debugging at high rates should be deferred to running normally)
# Abstract parser for compiler/interpreter
# Just recall __init__ when reset / init all variables there
# Mix breakpoint color with running / next instr color.
# Break up widget and update functions?